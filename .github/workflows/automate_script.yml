# name: Automate Job Scraping and Notifications

# on:
#   schedule:
#     # - cron: "30 * * * *"
#     - cron: "*/1 * * * *"

# jobs:
#   automate:
#     runs-on: ubuntu-latest

#     env:
#       USERNAME: ${{ secrets.SMTP_USERNAME }}
#       PASSWORD: ${{ secrets.SMTP_PASSWORD }}

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       - name: Set up Python with Node.js
#         uses: actions/setup-python@v2
#         with:
#           python-version: 3.x
          
#       - name: Install Dependencies
#         run: |
#           pip install -r requirements.txt

#       - name: Run Script
#         run: python script.py


name: Automate Job Scraping and Notifications

on:
  schedule:
    - cron: "*/1 * * * *"

jobs:
  automate:
    runs-on: ubuntu-latest

    env:
      USERNAME: ${{ secrets.SMTP_USERNAME }}
      PASSWORD: ${{ secrets.SMTP_PASSWORD }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      # Check if the artifacts already exist
      - name: Check for Existing Artifacts
        id: check_artifacts
        run: |
          if [[ -f "prevPythonJobs.txt" && -f "prevComputerJobs.txt" ]]; then
            echo "Artifacts already exist."
            echo "::set-output name=artifacts_exist::true"
          else
            echo "Artifacts do not exist."
            echo "::set-output name=artifacts_exist::false"
          fi
        continue-on-error: true
        
        # for debugging
          
      - name: List Files in Workspace
        run: |
          ls -l
        continue-on-error: true
          
      - name: List Files in Current Directory
        run: |
          pwd
          ls -l
        continue-on-error: true


      # Create or populate prevPythonJobs.txt here (modify this step as needed)
      - name: Create or Populate prevPythonJobs.txt
        run: |
          echo "Sample Python job 1" > prevPythonJobs.txt
          echo "Sample Python job 2" >> prevPythonJobs.txt
          echo "Sample Python job 3" >> prevPythonJobs.txt
        if: steps.check_artifacts.outputs.artifacts_exist == 'false'

      # Create or populate prevComputerJobs.txt here (modify this step as needed)
      - name: Create or Populate prevComputerJobs.txt
        run: |
          echo "Sample Computer Science job 1" > prevComputerJobs.txt
          echo "Sample Computer Science job 2" >> prevComputerJobs.txt
          echo "Sample Computer Science job 3" >> prevComputerJobs.txt
        if: steps.check_artifacts.outputs.artifacts_exist == 'false'

            
        # for debugging
          
      - name: List Files in Workspace
        run: |
          ls -l
        continue-on-error: true
          
      - name: List Files in Current Directory
        run: |
          pwd
          ls -l
        continue-on-error: true

      # Run your script
      - name: Run Python Script
        run: python script.py

      # Upload prevPythonJobs.txt as an artifact
      - name: Upload Previous Python Jobs as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: previous-python-jobs
          path: prevPythonJobs.txt
        if: steps.check_artifacts.outputs.artifacts_exist == 'false'

      # Upload prevComputerJobs.txt as an artifact
      - name: Upload Previous Computer Science Jobs as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: previous-computer-jobs
          path: prevComputerJobs.txt
        if: steps.check_artifacts.outputs.artifacts_exist == 'false'
